package com.shoes.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OrderItemsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderItemsAllPropertiesEquals(OrderItems expected, OrderItems actual) {
        assertOrderItemsAutoGeneratedPropertiesEquals(expected, actual);
        assertOrderItemsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderItemsAllUpdatablePropertiesEquals(OrderItems expected, OrderItems actual) {
        assertOrderItemsUpdatableFieldsEquals(expected, actual);
        assertOrderItemsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderItemsAutoGeneratedPropertiesEquals(OrderItems expected, OrderItems actual) {
        assertThat(expected)
            .as("Verify OrderItems auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderItemsUpdatableFieldsEquals(OrderItems expected, OrderItems actual) {
        assertThat(expected)
            .as("Verify OrderItems relevant properties")
            .satisfies(e -> assertThat(e.getQuantity()).as("check quantity").isEqualTo(actual.getQuantity()))
            .satisfies(e -> assertThat(e.getPrice()).as("check price").isEqualTo(actual.getPrice()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderItemsUpdatableRelationshipsEquals(OrderItems expected, OrderItems actual) {
        assertThat(expected)
            .as("Verify OrderItems relationships")
            .satisfies(e -> assertThat(e.getOrders()).as("check orders").isEqualTo(actual.getOrders()))
            .satisfies(e -> assertThat(e.getColors()).as("check colors").isEqualTo(actual.getColors()))
            .satisfies(e -> assertThat(e.getShoeVariants()).as("check shoeVariants").isEqualTo(actual.getShoeVariants()))
            .satisfies(e -> assertThat(e.getSizes()).as("check sizes").isEqualTo(actual.getSizes()));
    }
}
