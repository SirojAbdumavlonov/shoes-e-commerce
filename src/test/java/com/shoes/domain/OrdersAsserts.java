package com.shoes.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OrdersAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdersAllPropertiesEquals(Orders expected, Orders actual) {
        assertOrdersAutoGeneratedPropertiesEquals(expected, actual);
        assertOrdersAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdersAllUpdatablePropertiesEquals(Orders expected, Orders actual) {
        assertOrdersUpdatableFieldsEquals(expected, actual);
        assertOrdersUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdersAutoGeneratedPropertiesEquals(Orders expected, Orders actual) {
        assertThat(expected)
            .as("Verify Orders auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdersUpdatableFieldsEquals(Orders expected, Orders actual) {
        assertThat(expected)
            .as("Verify Orders relevant properties")
            .satisfies(e -> assertThat(e.getTotalPrice()).as("check totalPrice").isEqualTo(actual.getTotalPrice()))
            .satisfies(e -> assertThat(e.getOrderDate()).as("check orderDate").isEqualTo(actual.getOrderDate()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdersUpdatableRelationshipsEquals(Orders expected, Orders actual) {
        assertThat(expected)
            .as("Verify Orders relationships")
            .satisfies(e -> assertThat(e.getCustomer()).as("check customer").isEqualTo(actual.getCustomer()));
    }
}
