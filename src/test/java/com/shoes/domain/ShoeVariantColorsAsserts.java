package com.shoes.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ShoeVariantColorsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShoeVariantColorsAllPropertiesEquals(ShoeVariantColors expected, ShoeVariantColors actual) {
        assertShoeVariantColorsAutoGeneratedPropertiesEquals(expected, actual);
        assertShoeVariantColorsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShoeVariantColorsAllUpdatablePropertiesEquals(ShoeVariantColors expected, ShoeVariantColors actual) {
        assertShoeVariantColorsUpdatableFieldsEquals(expected, actual);
        assertShoeVariantColorsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShoeVariantColorsAutoGeneratedPropertiesEquals(ShoeVariantColors expected, ShoeVariantColors actual) {
        assertThat(expected)
            .as("Verify ShoeVariantColors auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShoeVariantColorsUpdatableFieldsEquals(ShoeVariantColors expected, ShoeVariantColors actual) {
        assertThat(expected)
            .as("Verify ShoeVariantColors relevant properties")
            .satisfies(e -> assertThat(e.getPrice()).as("check price").isEqualTo(actual.getPrice()))
            .satisfies(e -> assertThat(e.getImageUrl()).as("check imageUrl").isEqualTo(actual.getImageUrl()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShoeVariantColorsUpdatableRelationshipsEquals(ShoeVariantColors expected, ShoeVariantColors actual) {
        assertThat(expected)
            .as("Verify ShoeVariantColors relationships")
            .satisfies(e -> assertThat(e.getShoeVariants()).as("check shoeVariants").isEqualTo(actual.getShoeVariants()))
            .satisfies(e -> assertThat(e.getColors()).as("check colors").isEqualTo(actual.getColors()));
    }
}
