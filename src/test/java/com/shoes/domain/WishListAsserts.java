package com.shoes.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WishListAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWishListAllPropertiesEquals(WishList expected, WishList actual) {
        assertWishListAutoGeneratedPropertiesEquals(expected, actual);
        assertWishListAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWishListAllUpdatablePropertiesEquals(WishList expected, WishList actual) {
        assertWishListUpdatableFieldsEquals(expected, actual);
        assertWishListUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWishListAutoGeneratedPropertiesEquals(WishList expected, WishList actual) {
        assertThat(expected)
            .as("Verify WishList auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWishListUpdatableFieldsEquals(WishList expected, WishList actual) {
        assertThat(expected)
            .as("Verify WishList relevant properties")
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWishListUpdatableRelationshipsEquals(WishList expected, WishList actual) {
        assertThat(expected)
            .as("Verify WishList relationships")
            .satisfies(e -> assertThat(e.getCustomer()).as("check customer").isEqualTo(actual.getCustomer()));
    }
}
